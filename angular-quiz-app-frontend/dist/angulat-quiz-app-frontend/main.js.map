{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin-panel/admin-panel.component.css","webpack:///./src/app/admin-panel/admin-panel.component.html","webpack:///./src/app/admin-panel/admin-panel.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/create-answer/create-answer.component.css","webpack:///./src/app/create-answer/create-answer.component.html","webpack:///./src/app/create-answer/create-answer.component.ts","webpack:///./src/app/create-question/create-question.component.css","webpack:///./src/app/create-question/create-question.component.html","webpack:///./src/app/create-question/create-question.component.ts","webpack:///./src/app/get-questions-by-test/get-questions-by-test.component.css","webpack:///./src/app/get-questions-by-test/get-questions-by-test.component.html","webpack:///./src/app/get-questions-by-test/get-questions-by-test.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/manage-testing-url/manage-testing-url.component.css","webpack:///./src/app/manage-testing-url/manage-testing-url.component.html","webpack:///./src/app/manage-testing-url/manage-testing-url.component.ts","webpack:///./src/app/manage-tests/manage-tests.component.css","webpack:///./src/app/manage-tests/manage-tests.component.html","webpack:///./src/app/manage-tests/manage-tests.component.ts","webpack:///./src/app/passing-test/passing-test.component.css","webpack:///./src/app/passing-test/passing-test.component.html","webpack:///./src/app/passing-test/passing-test.component.ts","webpack:///./src/app/remove-answer/remove-answer.component.css","webpack:///./src/app/remove-answer/remove-answer.component.html","webpack:///./src/app/remove-answer/remove-answer.component.ts","webpack:///./src/app/services/http/http.service.ts","webpack:///./src/app/testing-results/testing-results.component.css","webpack:///./src/app/testing-results/testing-results.component.html","webpack:///./src/app/testing-results/testing-results.component.ts","webpack:///./src/app/update-question/update-question.component.css","webpack:///./src/app/update-question/update-question.component.html","webpack:///./src/app/update-question/update-question.component.ts","webpack:///./src/app/update-test/update-test.component.css","webpack:///./src/app/update-test/update-test.component.html","webpack:///./src/app/update-test/update-test.component.ts","webpack:///./src/app/user-panel/user-panel.component.css","webpack:///./src/app/user-panel/user-panel.component.html","webpack:///./src/app/user-panel/user-panel.component.ts","webpack:///./src/assets/Models/Managing/AnswerViewModel.ts","webpack:///./src/assets/Models/Managing/QuestionViewModel.ts","webpack:///./src/assets/Models/Managing/TestViewModel.ts","webpack:///./src/assets/Models/Managing/TestingUrlViewModel.ts","webpack:///./src/assets/Models/QuizPassing/ChoicePassingViewModel.ts","webpack:///./src/assets/Models/QuizPassing/TestPassingViewModel.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\r\\n\\r\\n \\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluLXBhbmVsL2FkbWluLXBhbmVsLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div>\\r\\n\\r\\n\\r\\n  <div >\\r\\n      <router-outlet></router-outlet>\\r\\n  </div>\\r\\n  \\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpService } from '../services/http/http.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-panel',\r\n  templateUrl: './admin-panel.component.html',\r\n  styleUrls: ['./admin-panel.component.css']\r\n})\r\nexport class AdminPanelComponent implements OnInit {\r\n\r\n  constructor(private http: HttpService) { \r\n    \r\n  }\r\n  adminSelection: number;\r\n  ngOnInit() {\r\n  }\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \".HomePageHeader{\\r\\ntext-align: center;\\r\\ncolor:white;\\r\\n-webkit-text-stroke-color: black;\\r\\n-webkit-text-stroke-width: 1px;\\r\\nmargin-top: 10px;\\r\\n}\\r\\n.MainPageLoginDiv\\r\\n{\\r\\n    width:100%;\\r\\n    height: 50px;\\r\\n    margin-top: 15px;\\r\\n    padding-right: 30px;\\r\\n\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxtQkFBbUI7QUFDbkIsWUFBWTtBQUNaLGlDQUFpQztBQUNqQywrQkFBK0I7QUFDL0IsaUJBQWlCO0NBQ2hCO0FBQ0Q7O0lBRUksV0FBVztJQUNYLGFBQWE7SUFDYixpQkFBaUI7SUFDakIsb0JBQW9COztDQUV2QiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLkhvbWVQYWdlSGVhZGVye1xyXG50ZXh0LWFsaWduOiBjZW50ZXI7XHJcbmNvbG9yOndoaXRlO1xyXG4td2Via2l0LXRleHQtc3Ryb2tlLWNvbG9yOiBibGFjaztcclxuLXdlYmtpdC10ZXh0LXN0cm9rZS13aWR0aDogMXB4O1xyXG5tYXJnaW4tdG9wOiAxMHB4O1xyXG59XHJcbi5NYWluUGFnZUxvZ2luRGl2XHJcbntcclxuICAgIHdpZHRoOjEwMCU7XHJcbiAgICBoZWlnaHQ6IDUwcHg7XHJcbiAgICBtYXJnaW4tdG9wOiAxNXB4O1xyXG4gICAgcGFkZGluZy1yaWdodDogMzBweDtcclxuXHJcbn1cclxuXHJcblxyXG4iXX0= */\"","module.exports = \"<html>\\n\\n<head></head>\\n\\n<body>\\n    <div class='MainPageLoginDiv'>\\n        <app-login (IsAdminEvent)='receiveIsAdmin($event)' (isUserEvent)='receiveIsUser($event)' style=\\\"    float: right;\\\"></app-login>\\n        <div style='width:100%;'>\\n            <nav class='nav' *ngIf='isAdmin' style='margin-left: 30px;'>\\n                <a class=\\\"nav-link active\\\" routerLink='./admin-panel/manage-tests'>Manage Tests</a>\\n                <a class=\\\"nav-link active\\\" routerLink='./admin-panel/manage-testing-urls'>Manage URLs</a>\\n                <a class=\\\"nav-link active\\\" routerLink='./admin-panel/testing-results'>Testing results</a>\\n                <!-- <button type='button'>RemoveTest</button>\\n                <button type='button'>CreateTestingUrl</button>\\n                <button type='button'>RemoveTestingUrl</button>\\n                <button type='button'>RemoveTestingResult</button> -->\\n            </nav>\\n        </div>\\n    </div>\\n  \\n    <div>\\n        <h1 class='HomePageHeader'>My QuizApp</h1>\\n    </div>\\n\\n    <div>\\n        <router-outlet></router-outlet>\\n    </div>\\n</body>\\n\\n</html>\"","import { Component, OnInit} from '@angular/core';\nimport { Location } from '@angular/common';\nimport { LoginViewModel } from 'src/assets/Models/LoginViewModel';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  isAdmin: boolean=false;\n  isUser: boolean = false;\n  currentUser: LoginViewModel;\n  constructor(private location:Location) { }\n\n  receiveIsAdmin($event) {\n    this.isAdmin = $event;  \n}\n\n  receiveCurrentUser($event) {\n    this.currentUser = $event;\n  }\n  \n  receiveIsUser($event) {\n    this.isUser = $event;\n  }\n  \n  ngOnInit() {\n\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http'\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { AdminPanelComponent } from './admin-panel/admin-panel.component';\r\nimport { CreateAnswerComponent } from './create-answer/create-answer.component';\r\nimport { RemoveAnswerComponent } from './remove-answer/remove-answer.component';\r\nimport { GetQuestionsByTestComponent } from './get-questions-by-test/get-questions-by-test.component';\r\nimport { CreateQuestionComponent } from './create-question/create-question.component'\r\nimport { RouterModule, RouterLinkActive } from '@angular/router';\r\nimport { UserPanelComponent } from './user-panel/user-panel.component';\r\nimport { PassingTestComponent } from './passing-test/passing-test.component';\r\nimport { UpdateQuestionComponent } from './update-question/update-question.component';\r\nimport { ManageTestsComponent } from './manage-tests/manage-tests.component';\r\nimport { UpdateTestComponent } from './update-test/update-test.component';\r\nimport { ManageTestingUrlComponent } from './manage-testing-url/manage-testing-url.component';\r\nimport { TestingResultsComponent } from './testing-results/testing-results.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    AdminPanelComponent,\r\n    CreateAnswerComponent,\r\n    RemoveAnswerComponent,\r\n    GetQuestionsByTestComponent,\r\n    CreateQuestionComponent,\r\n    UserPanelComponent,\r\n    PassingTestComponent,\r\n    UpdateQuestionComponent,\r\n    ManageTestsComponent,\r\n    UpdateTestComponent,\r\n    ManageTestingUrlComponent,\r\n    TestingResultsComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n\r\n    RouterModule.forRoot(\r\n      [\r\n       { path: 'admin-panel', component: AdminPanelComponent, children: [\r\n         { path: '', redirectTo: 'manage-tests', pathMatch: 'full' },\r\n         { path: 'testing-results', component: TestingResultsComponent },\r\n          { path: 'manage-tests', component: ManageTestsComponent },\r\n          { path: 'manage-testing-urls', component: ManageTestingUrlComponent },\r\n          { path: 'edit-test/:guid', component: UpdateTestComponent },\r\n          { path: 'edit-answers/:testGuid/:questionGuid', component: CreateAnswerComponent }]\r\n      },\r\n\r\n      // { path: 'user-panel', component: UserPanelComponent },\r\n      // { path: 'test-passing', component: PassingTestComponent },\r\n      { path: 'test-passing/:testingUrlGuid', component: PassingTestComponent },\r\n        //  { path: 'UserPanel/:username', component: UserPanelComponent }\r\n      ]\r\n    )\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \".tableNewAnswer{\\r\\n    /* table-layout: fixed;\\r\\n    width: 75%;\\r\\n    border-collapse: collapse;\\r\\n    border: 2px solid black; */\\r\\n    table-layout: fixed;\\r\\n    margin: auto;\\r\\n    padding: 10px;\\r\\n    border-collapse: collapse;\\r\\n    width: 75%;\\r\\n    margin-top: 30px;\\r\\n    \\r\\n  }\\r\\n\\r\\n .tableRow{\\r\\n    border-collapse: collapse; \\r\\n    width: 500px;\\r\\n    border-style: solid;\\r\\n    border-width: 2px;\\r\\n    border-color: black;\\r\\n    border-collapse: collapse; \\r\\n}\\r\\n\\r\\n .tableAnswers{\\r\\n    table-layout: fixed;\\r\\n    margin: auto;\\r\\n    padding: 10px;\\r\\n    border-collapse: collapse;\\r\\n    width: 50%;\\r\\n    margin-top: 30px;\\r\\n}\\r\\n\\r\\n .tableRowAnswers{\\r\\n    border-collapse: collapse; \\r\\n    width: 500px;\\r\\n    border-style: solid;\\r\\n    border-width: 2px;\\r\\n    border-color: black;\\r\\n    border-collapse: collapse; \\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY3JlYXRlLWFuc3dlci9jcmVhdGUtYW5zd2VyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSTs7OytCQUcyQjtJQUMzQixvQkFBb0I7SUFDcEIsYUFBYTtJQUNiLGNBQWM7SUFDZCwwQkFBMEI7SUFDMUIsV0FBVztJQUNYLGlCQUFpQjs7R0FFbEI7O0NBRUY7SUFDRywwQkFBMEI7SUFDMUIsYUFBYTtJQUNiLG9CQUFvQjtJQUNwQixrQkFBa0I7SUFDbEIsb0JBQW9CO0lBQ3BCLDBCQUEwQjtDQUM3Qjs7Q0FFRDtJQUNJLG9CQUFvQjtJQUNwQixhQUFhO0lBQ2IsY0FBYztJQUNkLDBCQUEwQjtJQUMxQixXQUFXO0lBQ1gsaUJBQWlCO0NBQ3BCOztDQUVEO0lBQ0ksMEJBQTBCO0lBQzFCLGFBQWE7SUFDYixvQkFBb0I7SUFDcEIsa0JBQWtCO0lBQ2xCLG9CQUFvQjtJQUNwQiwwQkFBMEI7Q0FDN0IiLCJmaWxlIjoic3JjL2FwcC9jcmVhdGUtYW5zd2VyL2NyZWF0ZS1hbnN3ZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi50YWJsZU5ld0Fuc3dlcntcclxuICAgIC8qIHRhYmxlLWxheW91dDogZml4ZWQ7XHJcbiAgICB3aWR0aDogNzUlO1xyXG4gICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcclxuICAgIGJvcmRlcjogMnB4IHNvbGlkIGJsYWNrOyAqL1xyXG4gICAgdGFibGUtbGF5b3V0OiBmaXhlZDtcclxuICAgIG1hcmdpbjogYXV0bztcclxuICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xyXG4gICAgd2lkdGg6IDc1JTtcclxuICAgIG1hcmdpbi10b3A6IDMwcHg7XHJcbiAgICBcclxuICB9XHJcblxyXG4gLnRhYmxlUm93e1xyXG4gICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgXHJcbiAgICB3aWR0aDogNTAwcHg7XHJcbiAgICBib3JkZXItc3R5bGU6IHNvbGlkO1xyXG4gICAgYm9yZGVyLXdpZHRoOiAycHg7XHJcbiAgICBib3JkZXItY29sb3I6IGJsYWNrO1xyXG4gICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgXHJcbn1cclxuXHJcbi50YWJsZUFuc3dlcnN7XHJcbiAgICB0YWJsZS1sYXlvdXQ6IGZpeGVkO1xyXG4gICAgbWFyZ2luOiBhdXRvO1xyXG4gICAgcGFkZGluZzogMTBweDtcclxuICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XHJcbiAgICB3aWR0aDogNTAlO1xyXG4gICAgbWFyZ2luLXRvcDogMzBweDtcclxufVxyXG5cclxuLnRhYmxlUm93QW5zd2Vyc3tcclxuICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7IFxyXG4gICAgd2lkdGg6IDUwMHB4O1xyXG4gICAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcclxuICAgIGJvcmRlci13aWR0aDogMnB4O1xyXG4gICAgYm9yZGVyLWNvbG9yOiBibGFjaztcclxuICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7IFxyXG59Il19 */\"","module.exports = \"<div *ngIf='selectedQuestion'>\\r\\n  <form #createAnswerForm='ngForm'>\\r\\n    <table *ngIf='isShowAddAnswerDiv' class='tableNewAnswer'>\\r\\n        <h3 style='text-align: center;margin: auto;'>{{selectedQuestion.Instance}}</h3>\\r\\n      <tr class='tableRow'>\\r\\n        <td><label>Instance</label></td>\\r\\n        <td><label>True</label></td>\\r\\n        <td><label>False</label></td>\\r\\n      </tr>\\r\\n      <tr class='tableRow'>\\r\\n        <td><input style='width: 300px;' type='text' name='answerInstanceInput' [(ngModel)]='_instance' required></td>\\r\\n        <td><input type='radio'  name='isCorrectAnswerRadio'  [(ngModel)]='_isCorrect' value='true' required></td>\\r\\n        <td> <input type='radio' name='isCorrectAnswerRadio' [(ngModel)]='_isCorrect' value='false' required></td>\\r\\n      </tr>\\r\\n  \\r\\n      <tr class='tableRow'> \\r\\n        <td>\\r\\n            <button name='confirmCreateAnswerButton' [disabled]='!createAnswerForm.form.valid' type='button' (click)='CreateAnswer()'>Confirm</button>\\r\\n        </td>\\r\\n        <td></td>\\r\\n        <td></td>\\r\\n      </tr>\\r\\n    </table>\\r\\n  </form>\\r\\n  <h1 style='text-align: center;'>{{selectedQuestion.Instance}}</h1>\\r\\n  <h2 style='text-align: center'>Answers</h2>\\r\\n  <table class='tableAnswers'>\\r\\n    <tr>\\r\\n      <button (click)='isShowAddAnswerDivValueChange()'>Add answer</button>\\r\\n    </tr>\\r\\n    <tr *ngFor='let answer of selectedQuestion.Answers' class='tableRowAnswers'>\\r\\n      <td>\\r\\n        <label>{{answer.Instance}}</label>\\r\\n      </td>\\r\\n      <td>\\r\\n        <button type='button' (click)='removeAnswer(answer.Guid)' style='float: right;'>Remove</button>\\r\\n      </td>\\r\\n    </tr>\\r\\n  </table>\\r\\n  <!-- <div>\\r\\n    \\r\\n    <div>\\r\\n      <label>Instance: </label>\\r\\n      <input type='text' [(ngModel)]='_instance'>\\r\\n    </div>\\r\\n    <div>\\r\\n      <label>Is correct:</label>\\r\\n      <input type='radio' [(ngModel)]='_isCorrect' value='true'>True\\r\\n      <input type='radio' [(ngModel)]='_isCorrect' value='false'> False\\r\\n    </div>\\r\\n  </div>\\r\\n  <button type='button' (click)='CreateAnswer()'>Confirm</button>\\r\\n  <div>\\r\\n    <div *ngFor='let answer of selectedQuestion.Answers'>\\r\\n      <label>{{answer.Instance}}</label>\\r\\n      <button type='button' (click)='removeAnswer(answer.Guid)'>Remove</button>\\r\\n\\r\\n    </div>\\r\\n  </div> -->\\r\\n</div>\"","import { Component, OnInit, Output, Input, OnChanges, SimpleChange, SimpleChanges } from '@angular/core';\r\nimport { QuestionViewModel } from '../../assets/Models/Managing/QuestionViewModel';\r\nimport { AnswerViewModel } from '../../assets/Models/Managing/AnswerViewModel';\r\nimport { HttpService } from '../services/http/http.service';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-create-answer',\r\n  templateUrl: './create-answer.component.html',\r\n  styleUrls: ['./create-answer.component.css']\r\n})\r\nexport class CreateAnswerComponent implements OnInit, OnChanges {\r\n  //  testsList: TestViewModel[];\r\n  @Input()\r\n  selectedQuestion!: QuestionViewModel;\r\n    answersList: AnswerViewModel[];\r\n  //  selectedTest: TestViewModel;\r\n  // isShowTestQuestions: boolean = false;\r\n  newAnswer: AnswerViewModel;\r\n  _instance: string;\r\n  _isCorrect: boolean;\r\n  @Input() isShowAddAnswerDiv!: boolean;\r\n  questionGuid: string;\r\n  testGuid: string;\r\n  constructor(private http: HttpService, private route:ActivatedRoute) { }\r\n\r\n  isShowAddAnswerDivValueChange() {\r\n   \r\n      this.isShowAddAnswerDiv = true;\r\n    \r\n  }\r\n\r\n  // isShowTestQuestionsValueChange(test:TestViewModel)\r\n  // {\r\n  //   if (this.isShowTestQuestions == false)\r\n  //   {\r\n  //     this.isShowTestQuestions = true;\r\n  //   }\r\n  //   this.selectedTest = test;\r\n  // }\r\n\r\n  // selectedQuestionGetAnswers(question: QuestionViewModel)\r\n  // {\r\n  //   this.selectedQuestion = question;\r\n  //   this.selectedQuestionAnswers = question.Answers;\r\n  // }\r\n\r\n  // GetAllTests()\r\n  // {\r\n  //   this.http.GetAllTests().subscribe((x: TestViewModel[]) => this.testsList = x);\r\n  // }\r\n\r\n  CreateAnswer() {\r\n    this.newAnswer = new AnswerViewModel();\r\n    var actionResult;\r\n    this.newAnswer.Instance = this._instance;\r\n    this.newAnswer.IsCorrect = this._isCorrect;\r\n    this.http.CreateAnswer(this.selectedQuestion.Guid, this.newAnswer).subscribe((x: boolean) => {\r\n      actionResult = x;\r\n      if (actionResult == true) {\r\n        this.selectedQuestion.Answers.push(this.newAnswer);\r\n        this._instance = '';\r\n        this._isCorrect = null;\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  removeAnswer(_answerGuid: string)\r\n  {\r\n\r\n    this.http.removeAnswer(_answerGuid).subscribe((x: boolean) => {\r\n      if (x == true) {\r\n        var deletedAnswer = this.selectedQuestion.Answers.find(z => z.Guid === _answerGuid);\r\n        var deletedAnswerIndex = this.selectedQuestion.Answers.indexOf(deletedAnswer);\r\n        if (deletedAnswerIndex !== -1)\r\n        {\r\n          this.selectedQuestion.Answers.splice(deletedAnswerIndex,1);\r\n          }}\r\n    });\r\n  }\r\n\r\n  addAnswer() {\r\n    this.newAnswer = new AnswerViewModel();\r\n    this.isShowAddAnswerDiv = true;\r\n  }\r\n\r\n  ngOnInit() {\r\n    // this.GetAllTests();\r\n    //  this.selectedQuestionAnswers = this.selectedQuestion.Answers;\r\n    this.route.params.subscribe(params => {\r\n      this.testGuid = params['testGuid'];\r\n      this.questionGuid = params['questionGuid'];\r\n      this.http.getQuestionsByTestGuid(this.testGuid).subscribe((x: QuestionViewModel[])=>{\r\n        for (var i = 0; i < x.length; i++){\r\n          if (x[i].Guid === this.questionGuid) {\r\n            this.selectedQuestion = x[i];\r\n          }\r\n        }\r\n        this.http.GetAnswersByQuestionGuid(this.selectedQuestion.Guid).subscribe((x: AnswerViewModel[]) => {\r\n          this.selectedQuestion.Answers = x;\r\n        });\r\n      });\r\n    });\r\n \r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    // if (changes.selectedQuestion) {\r\n    //   this.selectedQuestion = changes.selectedQuestion.currentValue;\r\n\r\n    //   this.selectedQuestionAnswers = changes.selectedQuestionAnswers.currentValue;\r\n    // }\r\n  }\r\n\r\n}\r\n","module.exports = \"table{\\r\\n    /* table-layout: fixed;\\r\\n    width: 75%;\\r\\n    border-collapse: collapse;\\r\\n    border: 2px solid black; */\\r\\n    table-layout: fixed;\\r\\n    margin: auto;\\r\\n    padding: 10px;\\r\\n    border-collapse: collapse;\\r\\n    width: 75%;\\r\\n    margin-top: 30px;\\r\\n  }\\r\\n\\r\\n\\r\\n.tableRow{\\r\\n    border-collapse: collapse; \\r\\n    width: 500px;\\r\\n    border-style: solid;\\r\\n    border-width: 2px;\\r\\n    border-color: black;\\r\\n    border-collapse: collapse; \\r\\n}\\r\\n\\r\\n\\r\\ninput:placeholder-shown{\\r\\n    border-color: red;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY3JlYXRlLXF1ZXN0aW9uL2NyZWF0ZS1xdWVzdGlvbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0k7OzsrQkFHMkI7SUFDM0Isb0JBQW9CO0lBQ3BCLGFBQWE7SUFDYixjQUFjO0lBQ2QsMEJBQTBCO0lBQzFCLFdBQVc7SUFDWCxpQkFBaUI7R0FDbEI7OztBQUdIO0lBQ0ksMEJBQTBCO0lBQzFCLGFBQWE7SUFDYixvQkFBb0I7SUFDcEIsa0JBQWtCO0lBQ2xCLG9CQUFvQjtJQUNwQiwwQkFBMEI7Q0FDN0I7OztBQUVEO0lBQ0ksa0JBQWtCO0NBQ3JCIiwiZmlsZSI6InNyYy9hcHAvY3JlYXRlLXF1ZXN0aW9uL2NyZWF0ZS1xdWVzdGlvbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGV7XHJcbiAgICAvKiB0YWJsZS1sYXlvdXQ6IGZpeGVkO1xyXG4gICAgd2lkdGg6IDc1JTtcclxuICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XHJcbiAgICBib3JkZXI6IDJweCBzb2xpZCBibGFjazsgKi9cclxuICAgIHRhYmxlLWxheW91dDogZml4ZWQ7XHJcbiAgICBtYXJnaW46IGF1dG87XHJcbiAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcclxuICAgIHdpZHRoOiA3NSU7XHJcbiAgICBtYXJnaW4tdG9wOiAzMHB4O1xyXG4gIH1cclxuXHJcblxyXG4udGFibGVSb3d7XHJcbiAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOyBcclxuICAgIHdpZHRoOiA1MDBweDtcclxuICAgIGJvcmRlci1zdHlsZTogc29saWQ7XHJcbiAgICBib3JkZXItd2lkdGg6IDJweDtcclxuICAgIGJvcmRlci1jb2xvcjogYmxhY2s7XHJcbiAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOyBcclxufVxyXG5cclxuaW5wdXQ6cGxhY2Vob2xkZXItc2hvd257XHJcbiAgICBib3JkZXItY29sb3I6IHJlZDtcclxufSJdfQ== */\"","module.exports = \"<div *ngIf='selectedTest'>\\n  <div>\\n    <div *ngIf='selectedTest'>\\n      <div *ngIf='selectedTest.Questions'>\\n        <form #createQuestionForm='ngForm'>\\n        <table class='table'>\\n          <tr>\\n            <td>\\n              <button (click)='isShowAddQuestionValueChange()'>Add question</button>\\n            </td>\\n            <td></td>\\n            <td></td>\\n          </tr>\\n\\n          <tr class='tableRow'>\\n            <th>Instance</th>\\n            <th></th>\\n            <th></th>\\n          </tr>\\n          <tr *ngIf='isShowAddQuestionDiv' class='tableRow'>\\n            <td><input class='form-control' type='text' name='questionInstance' [(ngModel)]='newQuestion.Instance' placeholder=\\\"Instance\\\" required></td>\\n            <td><input class='form-control' type='text'name='questionHint' [(ngModel)]='newQuestion.Hint' placeholder=\\\"Hint\\\" required></td>\\n            <td><button class='btn' type='button' (click)='confirmAddQuestion(newQuestion)' style='float: right;' name='createQuestionConfirm' [disabled]='!createQuestionForm.form.valid'>Confirm</button></td>\\n          </tr>\\n          <tr *ngFor='let question of selectedTest.Questions' class='tableRow'>\\n            <td>{{question.Instance}}</td>\\n            <td><button class='btn' style='float: right;' type='button' (click)='editAnswers(selectedTest.Guid,question.Guid)'>Edit answers</button></td>\\n            <td><button class='btn' style='float: right;' type='button' (click)='removeQuestion(selectedTest.Guid,question.Guid)'>Remove question</button></td>\\n          </tr>\\n        </table>\\n      </form>\\n      </div>\\n    </div>\\n  </div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { TestViewModel } from '../../assets/Models/Managing/TestViewModel';\nimport { HttpService } from '../services/http/http.service';\nimport { QuestionViewModel } from '../../assets/Models/Managing/QuestionViewModel';\nimport { AnswerViewModel } from '../../assets/Models/Managing/AnswerViewModel';\nimport { Title } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-create-question',\n  templateUrl: './create-question.component.html',\n  styleUrls: ['./create-question.component.css'],\n  \n})\nexport class CreateQuestionComponent implements OnInit {\n // testsList: TestViewModel[];\n@Input()  selectedTest: TestViewModel;\n  isShowAddQuestionDiv: boolean = false;\n  isShowAddAnswer: boolean = false;\n  newQuestion: QuestionViewModel;\n  newAnswer: AnswerViewModel = new AnswerViewModel();\n  selectedQuestion: QuestionViewModel;\n  selectedQuestionAnswers: AnswerViewModel[];\n  constructor(private http: HttpService, private router:Router) {\n  }\n\n  selectQuestion(_question: QuestionViewModel) {\n    this.selectedQuestion = _question;\n    this.selectedQuestionAnswers = this.selectedQuestion.Answers;\n   // this.title.setTitle(this.selectedQuestion.Answers.length.toString());\n  }\n\n  editAnswers(_testGuid:string,_questionGuid:string) {\n    this.router.navigate(['admin-panel/edit-answers/'+_testGuid+'/'+_questionGuid]);\n  }\n\n  isShowAddQuestionValueChange() {\n    this.isShowAddQuestionDiv = true;\n    this.newQuestion = new QuestionViewModel();\n    this.isShowAddAnswer = false;\n  }\n\n  isShowAddAnswerValueChange() {\n    this.isShowAddAnswer = true;\n    this.http.GetAnswersByQuestionGuid(this.selectedQuestion.Guid).subscribe(\n      (x: AnswerViewModel[]) => this.selectedQuestion.Answers = x);\n}\n\n  removeQuestion(_testGuid: string, _questionGuid: string) {\n    var result;\n    this.http.removeQuestion(_testGuid, _questionGuid).subscribe((x: boolean) => {\n      result = x;\n      if (result == true)\n      {\n        var index = this.selectedTest.Questions.findIndex(z => z.Guid == _questionGuid);\n        this.selectedTest.Questions.splice(index,1);\n      }\n    });\n    this.isShowAddAnswer = false;\n  }\n\n  confirmAddQuestion(_question: QuestionViewModel) {\n    this.http.createQuestion(this.selectedTest.Guid, _question).\n      subscribe((x: QuestionViewModel) => {\n        this.selectedTest.Questions.push(x);\n      });\n    this.isShowAddQuestionDiv = false;\n    this.newQuestion = new QuestionViewModel();\n    this.isShowAddAnswer = false;\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dldC1xdWVzdGlvbnMtYnktdGVzdC9nZXQtcXVlc3Rpb25zLWJ5LXRlc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div *ngIf='testsList'>\\n  <div>\\n    <ul *ngFor='let test of testsList'>\\n      <li (click)='isShowTestAnswersValueChange(test)'>{{test.Name}}</li>\\n    </ul>\\n  </div>\\n  <div *ngIf='isShowTestAnswers'>\\n<ul *ngFor='let question of selectedTest.Questions'>\\n  <li>\\n    {{question.Instance}}\\n  </li>\\n</ul>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { TestViewModel } from '../../assets/Models/Managing/TestViewModel';\nimport { HttpService } from '../services/http/http.service';\n\n@Component({\n  selector: 'app-get-questions-by-test',\n  templateUrl: './get-questions-by-test.component.html',\n  styleUrls: ['./get-questions-by-test.component.css']\n})\nexport class GetQuestionsByTestComponent implements OnInit {\n\n  testsList: TestViewModel[];\n  selectedTest: TestViewModel;\n  selectedTestQuestionsList: TestViewModel[];\n  isShowTestAnswers: boolean = false;\n\n  constructor(private http: HttpService) { }\n\n  isShowTestAnswersValueChange(test: TestViewModel) {\n    \n    if (this.isShowTestAnswers == true) {\n      this.isShowTestAnswers = false;\n    }\n    else {\n      this.selectedTest = test;\n      this.isShowTestAnswers = true;\n    }\n  }\n\n  getAllTests() {\n    this.http.GetAllTests().subscribe((x: TestViewModel[]) => this.testsList = x);\n  }\n\n  ngOnInit() {\n    this.getAllTests();\n  }\n\n}\n","module.exports = \".CredInput{\\r\\n    float: right;\\r\\n  margin-right: 5px;\\r\\n}\\r\\n/* button{\\r\\n  border-radius: 5px;\\r\\n  margin-left: 5px;\\r\\n  height: 30px;\\r\\n  width: 100px;\\r\\n} */\\r\\ninput:placeholder-shown{\\r\\n  border-color: red;\\r\\n}\\r\\n.currentUserDiv{\\r\\n  margin-right: 20px;\\r\\n  float: right;\\r\\n}\\r\\n.currentUserLabel{\\r\\n  font-size: 23px;\\r\\n}\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7RUFDZixrQkFBa0I7Q0FDbkI7QUFDRDs7Ozs7SUFLSTtBQUlKO0VBQ0Usa0JBQWtCO0NBQ25CO0FBRUQ7RUFDRSxtQkFBbUI7RUFDbkIsYUFBYTtDQUNkO0FBRUQ7RUFDRSxnQkFBZ0I7Q0FDakIiLCJmaWxlIjoic3JjL2FwcC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLkNyZWRJbnB1dHtcclxuICAgIGZsb2F0OiByaWdodDtcclxuICBtYXJnaW4tcmlnaHQ6IDVweDtcclxufVxyXG4vKiBidXR0b257XHJcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gIG1hcmdpbi1sZWZ0OiA1cHg7XHJcbiAgaGVpZ2h0OiAzMHB4O1xyXG4gIHdpZHRoOiAxMDBweDtcclxufSAqL1xyXG5cclxuXHJcblxyXG5pbnB1dDpwbGFjZWhvbGRlci1zaG93bntcclxuICBib3JkZXItY29sb3I6IHJlZDtcclxufVxyXG5cclxuLmN1cnJlbnRVc2VyRGl2e1xyXG4gIG1hcmdpbi1yaWdodDogMjBweDtcclxuICBmbG9hdDogcmlnaHQ7XHJcbn1cclxuXHJcbi5jdXJyZW50VXNlckxhYmVse1xyXG4gIGZvbnQtc2l6ZTogMjNweDtcclxufVxyXG5cclxuIl19 */\"","module.exports = \"<form #loginForm='ngForm' *ngIf='!IsLoginSuccessfull'>\\n  <div class='input-group input-group-sm'>\\n    <div class=\\\"input-group-prepend\\\" style='margin-left: 5px;'>\\n      <span class='input-group-text'>Login: </span>\\n    </div>\\n   \\n      <input required name='login' type='text' class='form-control' placeholder=\\\"Login\\\" [(ngModel)]='LoginInput'\\n        tabindex='1'>\\n   \\n    <div class=\\\"input-group-prepend\\\" style='margin-left: 5px;'>\\n        <span class='input-group-text'>Password: </span>\\n    </div>\\n\\n  \\n      <input name='password' class='form-control' type='password' placeholder=\\\"Password\\\" [(ngModel)]='PasswordInput'\\n        tabindex='2' required>\\n\\n\\n      <input style='margin-left: 5px; margin-right: 5px;' [disabled]='!loginForm.form.valid' type='button' (click)='Login(LoginInput,PasswordInput)' tabindex='3' id='loginButton'\\n        [ngClass]=\\\"loginForm.form.valid ? 'btn btn-sm btn-success ' : 'btn btn-sm btn-default '\\\" value='Log in'>\\n\\n  </div>\\n</form>\\n<div *ngIf='IsLoginSuccessfull' class='input-group input-group-sm'>\\n  <div class=\\\"input-group-prepend\\\">\\n<span class='input-group-text'>Current user: </span>\\n  </div>\\n  <input type='text' style='text-align: right;' [(ngModel)]='CurrentUser.Username' disabled=true>\\n  <button class='btn btn-warning btn-sm' style='margin-left:5px;' type='submit' (click)='Logout()' [routerLink]=\\\"['../']\\\">Log out</button>\\n</div>\"","import { Component, OnInit, Output, EventEmitter,  } from '@angular/core';\nimport { HttpService } from '../services/http/http.service';\nimport { LoginViewModel } from '../../assets/Models/LoginViewModel'\nimport { TestViewModel } from '../../assets/Models/Managing/TestViewModel';\nimport { Location } from '@angular/common'\nimport { Router } from '@angular/router';\nimport { Title } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private http: HttpService, private router: Router,private location:Location,private title:Title) { }\n\n  CurrentUser: LoginViewModel = { Username: '', Password: '' };\n  LoginInput: string;\n  PasswordInput: string;\n  IsLoginSuccessfull: boolean = false;\n  IsAdmin: boolean = false;\n  isUser:boolean = false;\n  @Output() IsAdminEvent = new EventEmitter<boolean>();\n  @Output() isUserEvent = new EventEmitter<boolean>();\n  @Output() currentUserEvent = new EventEmitter<LoginViewModel>();\n  Tests: TestViewModel[] = [];\n\n  sendIsAdmin() {\n    this.IsAdminEvent.emit(this.IsAdmin);\n  }\n\n  sendIsUser() {\n    this.isUserEvent.emit(this.isUser);\n  }\n\n  sendUser() {\n    this.currentUserEvent.emit(this.CurrentUser);\n}\n\n  ngOnInit() {\n    if (sessionStorage.getItem('login')) {\n      var user = sessionStorage.getItem('login');\n      this.CurrentUser.Username = user;\n      this.IsLoginSuccessfull = true;\n      if (user === 'admin') {\n        this.IsAdmin = true;\n        this.sendIsAdmin();\n        if (this.IsAdmin == true) {\n          this.router.navigate(['admin-panel']);\n        }\n      }\n      else {\n        this.sendUser();\n        this.router.navigate(['user-panel/']);\n      }\n    }\n  }\n\n  Logout() {\n    this.IsLoginSuccessfull = false;\n    this.IsAdmin = false;\n    this.CurrentUser.Username = '';\n    this.CurrentUser.Password = '';\n    this.LoginInput = '';\n    this.PasswordInput = '';\n    this.sendIsAdmin();\n    this.isUser = false;\n    this.sendIsUser();\n    sessionStorage.clear();\n    this.location.go('');\n\n  }\n\n  Login(LoginInput, PasswordInput) {\n  \n\n      this.http.Login(LoginInput, PasswordInput).subscribe((x: LoginViewModel) => {\n        this.CurrentUser = x;\n  \n        if (this.CurrentUser.Username == 'admin') {\n          this.IsAdmin = true;\n          this.IsLoginSuccessfull = true;\n          this.sendIsAdmin();\n          if (this.IsAdmin == true) {\n            this.router.navigate(['admin-panel']);\n          }\n          // else if (this.isUser == true) {\n          //   this.sendUser();\n           \n          //   this.router.navigate(['user-panel/']);\n   \n  \n          // }\n        }\n  \n        // else {\n        //   this.isUser = true;\n        //   this.sendUser();\n        //   this.sendIsUser();\n        //   this.router.navigate(['user-panel']);\n  \n  \n        // }\n     //   sessionStorage.setItem('login', this.CurrentUser.Username);\n      });\n    \n\n\n    this.LoginInput = '';\n    this.PasswordInput = '';\n  }\n}","module.exports = \"table{\\r\\n    /* border-style: solid;\\r\\n    border-color: black;\\r\\n    border-collapse: collapse;\\r\\n       \\r\\n     \\r\\n   */\\r\\n   table-layout: auto;\\r\\n    margin: auto;\\r\\n    padding: 10px;\\r\\n    border-collapse: collapse;\\r\\n    width:80%;\\r\\n}\\r\\n\\r\\n.bigColumns{\\r\\n    border-style: solid;\\r\\n    border-color: black;\\r\\n    border-width: 2px;\\r\\n    border-collapse: collapse; \\r\\n    width: 500px;\\r\\n}\\r\\n\\r\\nspan {\\r\\n    cursor:pointer;\\r\\n    color:blue;\\r\\n    text-decoration:underline;\\r\\n}\\r\\n\\r\\n.smallColumns{\\r\\n    border-style: solid;\\r\\n    border-color: black;\\r\\n    border-width: 2px;\\r\\n    border-collapse: collapse; \\r\\n    width: 150px;\\r\\n}\\r\\n\\r\\n/* .testingUrlTableHeaders th{\\r\\n    border-style: solid;\\r\\n    border-color: black;\\r\\n    border-width: 2px;\\r\\n    border-collapse: collapse; \\r\\n    width: 160px;\\r\\n}*/\\r\\n\\r\\n.testingUrlTableData td{\\r\\n    border-style: solid;\\r\\n    border-width: 1px;\\r\\n    border-color: black;\\r\\n    border-collapse: collapse; \\r\\n}\\r\\n\\r\\ninput[type=time]{\\r\\n    width: 90px;\\r\\nmargin-top: 5px;\\r\\n}\\r\\n\\r\\ninput[type=date]{\\r\\n    width: 170px;\\r\\n}\\r\\n\\r\\n.smallHeaders{\\r\\n    width: 20px;\\r\\n}\\r\\n\\r\\n.testListDiv{\\r\\n    width: auto;\\r\\n    height: 50px;\\r\\nwidth: auto;\\r\\n    margin: auto;\\r\\n    margin-bottom: 30px;\\r\\n    align-self:center;\\r\\n}\\r\\n\\r\\n.testListSelect{\\r\\n    margin: auto;\\r\\n    width: 245px;\\r\\n    height: 30px;\\r\\n    margin:3 auto 0 auto;\\r\\n}\\r\\n\\r\\nh1{\\r\\n    text-align: center;\\r\\n    color: #856404;\\r\\n    background-color: #fff3cd;\\r\\n    border-color: #ffeeba;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFuYWdlLXRlc3RpbmctdXJsL21hbmFnZS10ZXN0aW5nLXVybC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0k7Ozs7O0tBS0M7R0FDRixtQkFBbUI7SUFDbEIsYUFBYTtJQUNiLGNBQWM7SUFDZCwwQkFBMEI7SUFDMUIsVUFBVTtDQUNiOztBQUVEO0lBQ0ksb0JBQW9CO0lBQ3BCLG9CQUFvQjtJQUNwQixrQkFBa0I7SUFDbEIsMEJBQTBCO0lBQzFCLGFBQWE7Q0FDaEI7O0FBRUQ7SUFDSSxlQUFlO0lBQ2YsV0FBVztJQUNYLDBCQUEwQjtDQUM3Qjs7QUFFRDtJQUNJLG9CQUFvQjtJQUNwQixvQkFBb0I7SUFDcEIsa0JBQWtCO0lBQ2xCLDBCQUEwQjtJQUMxQixhQUFhO0NBQ2hCOztBQUVEOzs7Ozs7R0FNRzs7QUFFSDtJQUNJLG9CQUFvQjtJQUNwQixrQkFBa0I7SUFDbEIsb0JBQW9CO0lBQ3BCLDBCQUEwQjtDQUM3Qjs7QUFFRDtJQUNJLFlBQVk7QUFDaEIsZ0JBQWdCO0NBQ2Y7O0FBQ0Q7SUFDSSxhQUFhO0NBQ2hCOztBQUVEO0lBQ0ksWUFBWTtDQUNmOztBQUVEO0lBQ0ksWUFBWTtJQUNaLGFBQWE7QUFDakIsWUFBWTtJQUNSLGFBQWE7SUFDYixvQkFBb0I7SUFDcEIsa0JBQWtCO0NBQ3JCOztBQUVEO0lBQ0ksYUFBYTtJQUNiLGFBQWE7SUFDYixhQUFhO0lBQ2IscUJBQXFCO0NBQ3hCOztBQUVEO0lBQ0ksbUJBQW1CO0lBQ25CLGVBQWU7SUFDZiwwQkFBMEI7SUFDMUIsc0JBQXNCO0NBQ3pCIiwiZmlsZSI6InNyYy9hcHAvbWFuYWdlLXRlc3RpbmctdXJsL21hbmFnZS10ZXN0aW5nLXVybC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGV7XHJcbiAgICAvKiBib3JkZXItc3R5bGU6IHNvbGlkO1xyXG4gICAgYm9yZGVyLWNvbG9yOiBibGFjaztcclxuICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XHJcbiAgICAgICBcclxuICAgICBcclxuICAgKi9cclxuICAgdGFibGUtbGF5b3V0OiBhdXRvO1xyXG4gICAgbWFyZ2luOiBhdXRvO1xyXG4gICAgcGFkZGluZzogMTBweDtcclxuICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XHJcbiAgICB3aWR0aDo4MCU7XHJcbn1cclxuXHJcbi5iaWdDb2x1bW5ze1xyXG4gICAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcclxuICAgIGJvcmRlci1jb2xvcjogYmxhY2s7XHJcbiAgICBib3JkZXItd2lkdGg6IDJweDtcclxuICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7IFxyXG4gICAgd2lkdGg6IDUwMHB4O1xyXG59XHJcblxyXG5zcGFuIHtcclxuICAgIGN1cnNvcjpwb2ludGVyO1xyXG4gICAgY29sb3I6Ymx1ZTtcclxuICAgIHRleHQtZGVjb3JhdGlvbjp1bmRlcmxpbmU7XHJcbn1cclxuXHJcbi5zbWFsbENvbHVtbnN7XHJcbiAgICBib3JkZXItc3R5bGU6IHNvbGlkO1xyXG4gICAgYm9yZGVyLWNvbG9yOiBibGFjaztcclxuICAgIGJvcmRlci13aWR0aDogMnB4O1xyXG4gICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgXHJcbiAgICB3aWR0aDogMTUwcHg7XHJcbn1cclxuXHJcbi8qIC50ZXN0aW5nVXJsVGFibGVIZWFkZXJzIHRoe1xyXG4gICAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcclxuICAgIGJvcmRlci1jb2xvcjogYmxhY2s7XHJcbiAgICBib3JkZXItd2lkdGg6IDJweDtcclxuICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7IFxyXG4gICAgd2lkdGg6IDE2MHB4O1xyXG59Ki9cclxuXHJcbi50ZXN0aW5nVXJsVGFibGVEYXRhIHRke1xyXG4gICAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcclxuICAgIGJvcmRlci13aWR0aDogMXB4O1xyXG4gICAgYm9yZGVyLWNvbG9yOiBibGFjaztcclxuICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7IFxyXG59IFxyXG5cclxuaW5wdXRbdHlwZT10aW1lXXtcclxuICAgIHdpZHRoOiA5MHB4O1xyXG5tYXJnaW4tdG9wOiA1cHg7XHJcbn1cclxuaW5wdXRbdHlwZT1kYXRlXXtcclxuICAgIHdpZHRoOiAxNzBweDtcclxufVxyXG5cclxuLnNtYWxsSGVhZGVyc3tcclxuICAgIHdpZHRoOiAyMHB4O1xyXG59XHJcblxyXG4udGVzdExpc3REaXZ7XHJcbiAgICB3aWR0aDogYXV0bztcclxuICAgIGhlaWdodDogNTBweDtcclxud2lkdGg6IGF1dG87XHJcbiAgICBtYXJnaW46IGF1dG87XHJcbiAgICBtYXJnaW4tYm90dG9tOiAzMHB4O1xyXG4gICAgYWxpZ24tc2VsZjpjZW50ZXI7XHJcbn1cclxuXHJcbi50ZXN0TGlzdFNlbGVjdHtcclxuICAgIG1hcmdpbjogYXV0bztcclxuICAgIHdpZHRoOiAyNDVweDtcclxuICAgIGhlaWdodDogMzBweDtcclxuICAgIG1hcmdpbjozIGF1dG8gMCBhdXRvO1xyXG59XHJcblxyXG5oMXtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGNvbG9yOiAjODU2NDA0O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjNjZDtcclxuICAgIGJvcmRlci1jb2xvcjogI2ZmZWViYTtcclxufVxyXG4iXX0= */\"","module.exports = \"<div>\\n  <form #createTestUrlForm='ngForm'>\\n    <div *ngIf='isShowTests' class='testListDiv'>\\n      <h1>Please select test</h1>\\n\\n    </div>\\n    <div class='table-responsive'>\\n      <table *ngIf='testingUrlList' class=\\\"table\\\">\\n        <thead>\\n          <tr>\\n            <td>\\n              <button class='btn btn-success' (click)='addTestUrl()'>Create testing URL</button>\\n            </td>\\n            <td *ngIf='isShowTests'>\\n              <select (ngModelChange)='selectTest($event)' [ngModel]='selectedTest' name='testListSelect' class='form-control'\\n                [required]=\\\"true\\\">\\n                <option value='' disabled></option>\\n                <option *ngFor='let test of testsList' [ngValue]='test' name='selectTestButton'>{{test.Name}}</option>\\n              </select>\\n            </td>\\n          </tr>\\n          <tr>\\n            <th class='smallColumns'><label>URL</label></th>\\n            <th class='bigColumns'><label>Test name</label></th>\\n            <th class='bigColumns'><label>Interviewee</label></th>\\n            <th class='smallColumns'><label>Number of runs</label></th>\\n            <th class='bigColumns'><label>Allowed start date</label></th>\\n            <th class='bigColumns'><label>Allowed end date</label></th>\\n            <th class='smallColumns'></th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngIf='isShowAddTestUrl' class='testingUrlTableData'>\\n            <td></td>\\n            <td>{{selectedTest.Name}}</td>\\n            <td></td>\\n            <td></td>\\n            <td>\\n              <div class='input-group'>\\n                <input name='startDateInput' type=\\\"date\\\" [(ngModel)]='allowedStartDate' required class='form-control'>\\n                <input name='startTimeInput' type='time' class='form-control  input-sm' [(ngModel)]='allowedStartTime'\\n                  required>\\n              </div>\\n            </td>\\n            <td>\\n              <div class='input-group'>\\n                <input name='endDateInput' min=\\\"{{allowedStartDate}}\\\" class='form-control  input-sm' type=\\\"date\\\" [(ngModel)]='allowedEndDate'\\n                  required='required'>\\n                <input type='time' name='endTimeInput' class='form-control  input-sm' [(ngModel)]='allowedEndTime'\\n                  required>\\n\\n              </div>\\n            </td>\\n            <td><button [disabled]='!createTestUrlForm.form.valid' name='createTestUrlButtonConfirm' (click)='createTestUrl()'>Confirm</button></td>\\n          </tr>\\n\\n          <tr *ngFor='let testingUrl of testingUrlList' class='testingUrlTableData'>\\n            <td><span (click)=\\\"copyLink(testingUrl)\\\">Copy link</span></td>\\n            <td><label>{{testingUrl.TestName}}</label></td>\\n            <td><label>{{testingUrl.Interviewee}}</label></td>\\n            <td><label>{{testingUrl.NumberOfRuns}}</label></td>\\n            <td><label>{{testingUrl.AllowedStartDate}}</label></td>\\n            <td><label>{{testingUrl.AllowedEndDate}}</label></td>\\n            <td><button type='button' (click)='removeTestingUrl(testingUrl.Guid)'>Delete</button></td>\\n          </tr>\\n        </tbody>\\n\\n      </table>\\n    </div>\\n  </form>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { TestingUrlViewModel } from 'src/assets/Models/Managing/TestingUrlViewModel';\nimport { HttpService } from '../services/http/http.service';\nimport { TestViewModel } from 'src/assets/Models/Managing/TestViewModel';\n\n@Component({\n  selector: 'app-manage-testing-url',\n  templateUrl: './manage-testing-url.component.html',\n  styleUrls: ['./manage-testing-url.component.css']\n})\nexport class ManageTestingUrlComponent implements OnInit {\n  newTestingUrl: TestingUrlViewModel = new TestingUrlViewModel();\n  testingUrlList: TestingUrlViewModel[];\n  testsList: TestViewModel[];\n  selectedTest: TestViewModel = new TestViewModel();;\n  allowedStartDate: string;\n  allowedStartTime: string='00:00';\n  allowedEndDate: string;\n  allowedEndTime: string='00:00';\n  isShowAddTestUrl: boolean = false;\n  isShowTests: boolean;\n  constructor(private http: HttpService) {\n    this.newTestingUrl.TestName = '';\n    this.newTestingUrl.NumberOfRuns = 0;\n    this.selectedTest.Name = '';\n  }\n\n  createTestUrl() {\n    this.newTestingUrl = new TestingUrlViewModel();\n    this.newTestingUrl.TestName = '';\n    this.newTestingUrl.NumberOfRuns = 0;\n    this.newTestingUrl.AllowedStartDate = this.allowedStartDate + ' ' + this.allowedStartTime;\n    this.newTestingUrl.AllowedEndDate = this.allowedEndDate + ' ' + this.allowedEndTime;\n    this.newTestingUrl.TestGuid = this.selectedTest.Guid;\n    this.newTestingUrl.TestName = this.selectedTest.Name;\n    this.http.createTestingUrl(this.newTestingUrl).subscribe(() => {\n      this.http.getAllTestingUrls().subscribe((z: TestingUrlViewModel[]) => this.testingUrlList = z);\n      this.selectedTest = new TestViewModel();\n      this.selectedTest.Name = '';\n      this.isShowAddTestUrl = false;\n      this.isShowTests = false;\n      this.http.getAllTestingUrls().subscribe((x: TestingUrlViewModel[]) => {\n        this.testingUrlList = x;\n        for (var i = 0; i < this.testingUrlList.length; i++){\n          this.testingUrlList[i].UrlInstance = 'http://localhost:4200/test-passing/' + this.testingUrlList[i].Guid;\n        }\n      });\n      this.http.GetAllTests().subscribe((x: TestViewModel[]) => this.testsList = x);\n    });\n  }\n  \n  addTestUrl()\n  {\n    this.isShowAddTestUrl = true;\n    this.isShowTests = true;\n    this.selectedTest = new TestViewModel();\n  }\n\n  removeTestingUrl(_testingUrlGuid: string) {\n    this.http.removeTestingUrl(_testingUrlGuid).subscribe(() => {\n      this.http.getAllTestingUrls().subscribe((z: TestingUrlViewModel[]) => this.testingUrlList = z);\n    });\n  }\n\n  selectTest(_test:TestViewModel) {\n    this.selectedTest = _test;\n  }\n  \n  ngOnInit() {\n    this.http.getAllTestingUrls().subscribe((x: TestingUrlViewModel[]) => {\n      this.testingUrlList = x;\n      for (var i = 0; i < this.testingUrlList.length; i++){\n        this.testingUrlList[i].UrlInstance = 'localhost:4200/test-passing/' + this.testingUrlList[i].Guid;\n      }\n    });\n    this.http.GetAllTests().subscribe((x: TestViewModel[]) => this.testsList = x);  \n  }\n\n  copyLink(_testingUrl:TestingUrlViewModel) {\n    let selBox = document.createElement('textarea');\n    selBox.style.position = 'fixed';\n    selBox.style.left = '0';\n    selBox.style.top = '0';\n    selBox.style.opacity = '0';\n    selBox.value =document.domain+\":4200\"+\"/test-passing/\"+_testingUrl.Guid;\n    document.body.appendChild(selBox);\n    selBox.focus();\n    selBox.select();\n    document.execCommand('copy');\n    document.body.removeChild(selBox);\n  }\n\n}\n","module.exports = \"table{\\r\\n    /* table-layout: fixed;\\r\\n    width: 75%;\\r\\n    border-collapse: collapse;\\r\\n    border: 2px solid black; */\\r\\n    table-layout: fixed;\\r\\n    margin: auto;\\r\\n    padding: 10px;\\r\\n    border-collapse: collapse;\\r\\n  }\\r\\n\\r\\ntr.tableRowHeaders th{\\r\\n    border-collapse: collapse;\\r\\n    border: 2px solid black;\\r\\n}\\r\\n\\r\\ntr.tableRowData td{\\r\\n    width: 220px;\\r\\n    border-collapse: collapse;\\r\\n    border: 1px solid black;\\r\\n}\\r\\n\\r\\ninput:placeholder-shown{\\r\\n    border-color: red;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFuYWdlLXRlc3RzL21hbmFnZS10ZXN0cy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0k7OzsrQkFHMkI7SUFDM0Isb0JBQW9CO0lBQ3BCLGFBQWE7SUFDYixjQUFjO0lBQ2QsMEJBQTBCO0dBQzNCOztBQUVIO0lBQ0ksMEJBQTBCO0lBQzFCLHdCQUF3QjtDQUMzQjs7QUFFRDtJQUNJLGFBQWE7SUFDYiwwQkFBMEI7SUFDMUIsd0JBQXdCO0NBQzNCOztBQUVEO0lBQ0ksa0JBQWtCO0NBQ3JCIiwiZmlsZSI6InNyYy9hcHAvbWFuYWdlLXRlc3RzL21hbmFnZS10ZXN0cy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGV7XHJcbiAgICAvKiB0YWJsZS1sYXlvdXQ6IGZpeGVkO1xyXG4gICAgd2lkdGg6IDc1JTtcclxuICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XHJcbiAgICBib3JkZXI6IDJweCBzb2xpZCBibGFjazsgKi9cclxuICAgIHRhYmxlLWxheW91dDogZml4ZWQ7XHJcbiAgICBtYXJnaW46IGF1dG87XHJcbiAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcclxuICB9XHJcblxyXG50ci50YWJsZVJvd0hlYWRlcnMgdGh7XHJcbiAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xyXG4gICAgYm9yZGVyOiAycHggc29saWQgYmxhY2s7XHJcbn1cclxuXHJcbnRyLnRhYmxlUm93RGF0YSB0ZHtcclxuICAgIHdpZHRoOiAyMjBweDtcclxuICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcclxufVxyXG5cclxuaW5wdXQ6cGxhY2Vob2xkZXItc2hvd257XHJcbiAgICBib3JkZXItY29sb3I6IHJlZDtcclxufVxyXG4iXX0= */\"","module.exports = \"<div>\\n  <div>\\n    <form #createTestForm='ngForm' >\\n\\n      <table class='table' style='width: 75%;'>\\n        <tr>\\n            <button style=\\\"margin-bottom:7px;\\\" (click)='showAddTestValueChange()' class='btn btn-success' type='submit'>Add test</button>\\n        </tr>\\n        <tr class='tableRowHeaders'>\\n          <th>Test name</th>\\n          <th>Description</th>\\n          <th>Test length</th>\\n          <th>Time per question</th>\\n          <th></th>\\n          <th></th>\\n        </tr>\\n        <tr *ngIf='isShowAddTest' class='tableRowData'>\\n          \\n            <td><input type='text' class='form-control' [(ngModel)]='newTest.Name' name='testNameInput' placeholder=\\\"Test name\\\" required></td>\\n            <td><input type='text' class='form-control' [(ngModel)]='newTest.Description' placeholder=\\\"Description\\\" name='testDescriptionInput' required></td>\\n            <td><input type='time' class='form-control' [(ngModel)]='newTest.TestTimeLimit' name='testTime' step=\\\"30\\\" required></td>\\n            <td><input type='time' class='form-control' [(ngModel)]='newTest.QuestionTimeLimit' step=\\\"30\\\" name='questiontime' required></td>\\n            <td><button (click)='confirmAddTest()' class='tableRowData' type='button' [disabled]='!createTestForm.form.valid'>Confirm</button></td>\\n            <td><button type='button' (click)='cancelNewTest()' class='tableRowData'>Cancel</button></td>\\n          </tr>\\n        <tr *ngFor='let test of testsList' class='tableRowData'>\\n          <td>{{test.Name}}</td>\\n          <td>{{test.Description}}</td>\\n          <td>{{test.TestTimeLimit}}</td>\\n          <td>{{test.QuestionTimeLimit}}</td>\\n          <td><a routerLink='../edit-test/{{test.Guid}}'>Update test</a></td>\\n          <td><button type='button' (click)='removeTest(test)'>Delete</button></td>\\n        </tr>\\n        \\n      </table>\\n    </form>\\n    \\n    <!-- <div *ngIf='showAddTest'>\\n      <div>\\n        <label>Name: </label>\\n        <input type='text' [(ngModel)]='newTest.Name'>\\n      </div>\\n      <div>\\n        <label>Description: </label>\\n        <input type='text' [(ngModel)]='newTest.Description'>\\n      </div>\\n      <div>\\n        <label>Test Time Limit: </label>\\n        <input type='time' [(ngModel)]='newTest.TestTimeLimit'>\\n      </div>\\n      <div>\\n        <label>Question Time Limit: </label>\\n        <input type='time' [(ngModel)]='newTest.QuestionTimeLimit'>\\n      </div>\\n      <button (click)='confirmAddTest()'>Comfirm</button>\\n    </div>\\n  </div> -->\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { TestViewModel } from 'src/assets/Models/Managing/TestViewModel';\nimport { HttpService } from '../services/http/http.service';\nimport { Title } from '@angular/platform-browser';\n\n\n@Component({\n  selector: 'app-manage-tests',\n  templateUrl: './manage-tests.component.html',\n  styleUrls: ['./manage-tests.component.css']\n})\nexport class ManageTestsComponent implements OnInit {\n  newTest: TestViewModel = new TestViewModel();\n  testsList: TestViewModel[];\n  isShowAddTest: boolean;\n  dateTime: Date = new Date();\n  constructor(private http:HttpService,private title:Title) { }\n \n  showAddTestValueChange() {\n    this.newTest = new TestViewModel();\n    this.newTest.QuestionTimeLimit = '00:00';\n    this.newTest.TestTimeLimit = '00:00';\n    this.isShowAddTest = true;\n  }\n\n  removeTest(_test:TestViewModel) {\n    this.http.removeTest(_test.Guid).subscribe((x: boolean) => {\n      if (x === true) {\n        this.http.GetAllTests().subscribe((x: TestViewModel[]) => this.testsList = x);\n      }\n    });\n}\n\n  confirmAddTest() {\n    this.http.createTest(this.newTest).subscribe((x: TestViewModel) => {\n      if (x!==undefined)\n      {\n        this.testsList.push(x);\n        this.isShowAddTest = false;\n        }\n\n    });\n  }\n\n  addNewTest() {\n    this.newTest = new TestViewModel();\n    this.newTest.QuestionTimeLimit = '00:00';\n    this.newTest.TestTimeLimit = '00:00';\n    this.isShowAddTest = true;\n  }\n\n  cancelNewTest() {\n    this.newTest = new TestViewModel();\n    this.newTest.QuestionTimeLimit = '00:00';\n    this.newTest.TestTimeLimit = '00:00';\n    this.isShowAddTest = false;\n  }\n\n  ngOnInit() {\n    this.http.GetAllTests().subscribe((x: TestViewModel[]) => this.testsList = x);\n  }\n\n}\n","module.exports = \"table{\\r\\n    margin: auto;\\r\\n    padding: 10px;\\r\\n    width: 60%;\\r\\n   \\r\\n}\\r\\n\\r\\n.infoTableRow td{\\r\\n    border: 1px black solid;\\r\\ntext-align: center;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFzc2luZy10ZXN0L3Bhc3NpbmctdGVzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtJQUNiLGNBQWM7SUFDZCxXQUFXOztDQUVkOztBQUVEO0lBQ0ksd0JBQXdCO0FBQzVCLG1CQUFtQjtDQUNsQiIsImZpbGUiOiJzcmMvYXBwL3Bhc3NpbmctdGVzdC9wYXNzaW5nLXRlc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxle1xyXG4gICAgbWFyZ2luOiBhdXRvO1xyXG4gICAgcGFkZGluZzogMTBweDtcclxuICAgIHdpZHRoOiA2MCU7XHJcbiAgIFxyXG59XHJcblxyXG4uaW5mb1RhYmxlUm93IHRke1xyXG4gICAgYm9yZGVyOiAxcHggYmxhY2sgc29saWQ7XHJcbnRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG4iXX0= */\"","module.exports = \"<div>\\n  <h1 *ngIf='currentTest' style='text-align: center;'>{{currentTest.Name}}</h1>\\n  <div *ngIf='isShowWelcome'>\\n    <table *ngIf='currentTest'>\\n      <tr class='infoTableRow'>\\n        <td><label>Description: {{currentTest.Description}}</label></td>\\n        <td><label>Time for test: {{currentTest.TestTimeLimit}}</label></td>\\n        <td><label>Time per question: {{currentTest.QuestionTimeLimit}}</label></td>\\n      </tr>\\n      <tr style='text-align: center;'>\\n        <td></td>\\n        <td><button (click)='startTest()'>Start test</button></td>\\n        <td></td>\\n      </tr>\\n    </table>\\n  </div>\\n  <div *ngIf='isShowTest'>\\n    <div>\\n      <label>Time left: {{timeLeft}}</label>\\n    </div>\\n    <h1 style='text-align: center;'>{{currentQuestion.Instance}}</h1>\\n    <table class='table table-hover'>\\n      <tr *ngFor='let answer of currentQuestion.Answers'>\\n        <td><input type='radio' (click)='selectAnswer(answer)' name='isAnswerSelecter'></td>\\n        <td>{{answer.Instance}}</td>\\n      </tr>\\n    </table>\\n    <button style='margin-left: 50%;' (click)='nextQuestion()'>Next</button>\\n  </div>\\n  <div *ngIf='isShowResult'>\\n      <table>\\n        <tr>\\n          <th>Total questions: {{testPassingResult.QuestionTried}} </th>\\n          <th>Correct answers: {{testPassingResult.Score}}</th>\\n          <th>Result: {{(testPassingResult.Score/testPassingResult.QuestionTried)*100}}%</th>\\n        </tr>\\n      </table>\\n  </div>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { TestViewModel } from 'src/assets/Models/Managing/TestViewModel';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpService } from '../services/http/http.service';\nimport { map, mergeMap } from 'rxjs/operators'\nimport { QuestionViewModel } from 'src/assets/Models/Managing/QuestionViewModel';\nimport { TestingUrlViewModel } from 'src/assets/Models/Managing/TestingUrlViewModel';\nimport { TestPassingViewModel } from 'src/assets/Models/QuizPassing/TestPassingViewModel';\nimport { Title } from '@angular/platform-browser';\nimport { AnswerViewModel } from 'src/assets/Models/Managing/AnswerViewModel';\nimport { ChoicePassingViewModel } from 'src/assets/Models/QuizPassing/ChoicePassingViewModel';\n@Component({\n  selector: 'app-passing-test',\n  templateUrl: './passing-test.component.html',\n  styleUrls: ['./passing-test.component.css']\n})\nexport class PassingTestComponent implements OnInit {\n  testGuid: string;\n  isShowWelcome: boolean = true;\n  isShowTest: boolean = false;\n  isShowResult: boolean = false;\n  testingUrlGuid: string;\n  username: string;\n  selectedAnswer: AnswerViewModel;\n  currentTest: TestViewModel;\n  currentQuestion: QuestionViewModel;\n  currentQuestionIndex: number;\n  testPassingResult: TestPassingViewModel = new TestPassingViewModel();\n  timePerQuestion: number;\n  timeLeft: number;\n  interval: any;\n  duration: number = 0;\n  constructor(private route: ActivatedRoute, private http: HttpService, private title: Title) { }\n\n  startTest() {\n    if (this.testingUrlGuid) {\n      this.http.getInfoAndStartTest(this.testingUrlGuid).pipe(map(result => {\n        this.isShowWelcome = false;\n        this.isShowTest = true;\n\n        this.testPassingResult.Guid = result['AttemptGuid'];\n        this.testPassingResult.Score = 0;\n        this.testPassingResult.QuestionTried = 0;\n        this.testPassingResult.TestingStartDateTime = new Date().toISOString();\n        this.currentQuestionIndex = 0;\n        this.testPassingResult.Questions = [];\n        this.testPassingResult.TestingGuid = this.testingUrlGuid;\n        this.currentQuestion = this.currentTest.Questions[this.currentQuestionIndex];\n        this.http.GetAnswersByQuestionGuid(this.currentQuestion.Guid).pipe(map((answers: AnswerViewModel[]) => {\n          this.currentQuestion.Answers = answers;\n          this.timeLeft = Number.parseInt(this.currentTest.QuestionTimeLimit.split(':')[0]) * 3600 +\n            Number.parseInt(this.currentTest.QuestionTimeLimit.split(':')[1]) * 60 +\n            Number.parseInt(this.currentTest.QuestionTimeLimit.split(':')[2]);\n          this.timePerQuestion = this.timeLeft;\n          this.interval = setInterval(() => {\n            if (this.timeLeft > 0) {\n              this.timeLeft--;\n            } else {\n              this.nextQuestion();\n            }\n          }, 1000);\n        })).subscribe();\n\n      }\n      )).subscribe();\n\n    }\n    // } else {\n    //   this.isShowWelcome = false;\n    //   this.isShowTest = true;\n    //   this.testPassingResult.Interviewee = sessionStorage.getItem('username');\n    //   this.testPassingResult.Score = 0;\n    //   this.testPassingResult.TestingStartDateTime = new Date().toDateString();\n    //   this.testPassingResult.QuestionTried = 0;\n    //   this.testPassingResult.TestingGuid = this.currentTest.Guid;\n    //   this.testPassingResult.Questions = [];\n    //   this.currentQuestionIndex = 0;\n    //   this.currentQuestion = this.currentTest.Questions[this.currentQuestionIndex];\n    //   this.http.GetAnswersByQuestionGuid(this.currentQuestion.Guid).pipe(map((answers: AnswerViewModel[]) => {\n    //     this.currentQuestion.Answers = answers;\n    //   })).subscribe();\n    // }\n\n  }\n\n  selectAnswer(answer: AnswerViewModel) {\n    this.selectedAnswer = answer;\n  }\n\n  nextQuestion() {\n    if (this.currentQuestionIndex < (this.currentTest.Questions.length - 1)) {\n      this.duration += this.timePerQuestion - this.timeLeft;\n      let choise:ChoicePassingViewModel = new ChoicePassingViewModel();\n      choise.QuestionGuid = this.currentTest.Questions[this.currentQuestionIndex].Guid;\n      choise.AnswersSelected = [];\n      if (this.selectedAnswer) {\n        choise.AnswersSelected.push(this.selectedAnswer.Guid);\n      }\n\n      this.testPassingResult.Questions.push(choise);\n      this.currentQuestionIndex++;\n      this.currentQuestion = this.currentTest.Questions[this.currentQuestionIndex];\n      this.testPassingResult.QuestionTried += 1;\n\n      clearInterval(this.interval);\n      this.interval = setInterval(() => {\n        if (this.timeLeft > 0) {\n          this.timeLeft--;\n        } else {\n          this.nextQuestion();\n        }\n      }, 1000);\n      this.timeLeft = Number.parseInt(this.currentTest.QuestionTimeLimit.split(':')[0]) * 3600 +\n        Number.parseInt(this.currentTest.QuestionTimeLimit.split(':')[1]) * 60 +\n        Number.parseInt(this.currentTest.QuestionTimeLimit.split(':')[2]);\n\n      if (this.selectedAnswer !== null) {\n        if (this.selectedAnswer.IsCorrect) {\n          this.testPassingResult.Score++;\n          this.selectedAnswer = null;\n        }\n      }\n    }\n    else {\n      clearInterval(this.interval);\n      this.testPassingResult.QuestionTried += 1;\n      let choise:ChoicePassingViewModel = new ChoicePassingViewModel();\n      choise.QuestionGuid = this.currentTest.Questions[this.currentQuestionIndex].Guid;\n      choise.AnswersSelected = [];\n      if (this.selectedAnswer) {\n        choise.AnswersSelected.push(this.selectedAnswer.Guid);\n      }\n      this.testPassingResult.Questions.push(choise);\n      this.duration += this.timePerQuestion - this.timeLeft;\n      if (this.duration < 60) {\n\n        var stringDuration = \"00:00:\" + this.duration.toString();\n\n      } else if (this.duration < 3600) {\n        var stringDuration = \"00:\" + (this.duration / 60).toString().split('.')[0] + (this.duration % 60).toString();\n      }\n      this.testPassingResult.Duration = stringDuration;\n\n      this.isShowTest = false;\n      this.isShowResult = true;\n      this.testPassingResult.TestingEndDateTime = new Date().toISOString();\n\n      this.http.finishTest(this.testPassingResult).subscribe();\n    }\n  }\n\n\n  ngOnInit() {\n    this.route.params.pipe(map(params => {\n      this.testingUrlGuid = params['testingUrlGuid'];\n      if (this.testingUrlGuid) {\n        this.http.getTestByTestingUrlGuid(this.testingUrlGuid).pipe(map((x: TestViewModel) => {\n          this.currentTest = x;\n        })).subscribe();\n      }\n      // else {\n      //   this.testGuid = sessionStorage.getItem('testGuid');\n      //   if (sessionStorage.getItem('username') !== undefined) {\n      //     this.username = sessionStorage.getItem('username');\n      //   }\n      //   this.http.GetAllTests().pipe(map((x: TestViewModel[]) => {\n      //     for (var i = 0; i < x.length; i++) {\n      //       if (x[i].Guid === this.testGuid) {\n      //         this.currentTest = x[i];\n      //       }\n      //     }\n      //   })).subscribe();\n      // }\n    })).subscribe();\n  }\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlbW92ZS1hbnN3ZXIvcmVtb3ZlLWFuc3dlci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div>\\n  <div>\\n    <ul *ngFor='let test of testsList'>\\n      <li (click)='isShowTestQuestionsValueChange(test)'>\\n        <span>{{test.Name}}</span>{{test.Description}}\\n      </li>\\n    </ul>\\n  </div>\\n  <div *ngIf='isShowTestQuestions'>\\n    <ul *ngFor='let question of selectedTest.Questions' (click)='selectedQuestionGetAnswers(question)'>\\n      <li>{{question.Instance}}</li>\\n    </ul>\\n  </div>\\n  <div *ngIf='selectedQuestionAnswers'>\\n    <ul *ngFor='let answer of selectedQuestionAnswers'>\\n      <li>\\n        <button (click)='removeAnswer(answer.Guid)'>Remove</button> {{answer.Instance}}\\n      </li>\\n    </ul>\\n  </div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { TestViewModel } from '../../assets/Models/Managing/TestViewModel';\nimport { QuestionViewModel } from '../../assets/Models/Managing/QuestionViewModel';\nimport { AnswerViewModel } from '../../assets/Models/Managing/AnswerViewModel';\nimport { HttpService } from '../services/http/http.service';\n\n@Component({\n  selector: 'app-remove-answer',\n  templateUrl: './remove-answer.component.html',\n  styleUrls: ['./remove-answer.component.css']\n})\nexport class RemoveAnswerComponent implements OnInit {\n testsList: TestViewModel[];\n\n questionsList: QuestionViewModel[];\n selectedTest: TestViewModel;\n isShowTestQuestions: boolean = false;\n  selectedQuestion:QuestionViewModel;\n selectedQuestionAnswers: AnswerViewModel[];\n  _instance: string;\n  _isCorrect: boolean;\n  constructor(private http:HttpService) { }\n\n  selectedQuestionGetAnswers(question: QuestionViewModel)\n  {\n    this.selectedQuestion = question;\n    this.selectedQuestionAnswers = question.Answers;\n  }\n\n  isShowTestQuestionsValueChange(test:TestViewModel)\n  {\n    if (this.isShowTestQuestions == true)\n    {\n      this.isShowTestQuestions = false;\n    }\n    else\n    {\n      this.isShowTestQuestions = true;\n    }\n    this.selectedTest = test;\n  }\n\n  GetAllTests()\n  {\n    this.http.GetAllTests().subscribe((x: TestViewModel[]) => this.testsList = x);\n  }\n\n  removeAnswer(_answerGuid: string)\n  {\n    var result;\n    this.http.removeAnswer(_answerGuid).subscribe((x: boolean) => {\n      result = x;\n      if (result == true) {\n        var deletedAnswer = this.selectedQuestion.Answers.find(x => x.Guid === _answerGuid);\n        var deletedAnswerIndex = this.selectedQuestion.Answers.indexOf(deletedAnswer);\n        if (deletedAnswerIndex !== -1)\n        {\n          this.selectedQuestion.Answers.splice(deletedAnswerIndex);\n          }\n        \n      }\n    });\n  }\n\n  ngOnInit() {\n    this.GetAllTests();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpRequest, HttpHandler } from '@angular/common/http'\nimport { AnswerViewModel } from 'src/assets/Models/Managing/AnswerViewModel';\nimport { QuestionViewModel } from 'src/assets/Models/Managing/QuestionViewModel';\nimport { TestViewModel } from 'src/assets/Models/Managing/TestViewModel';\nimport { TestingUrlViewModel } from 'src/assets/Models/Managing/TestingUrlViewModel';\nimport { TestPassingViewModel } from 'src/assets/Models/QuizPassing/TestPassingViewModel';\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n  constructor(private http: HttpClient) { }\n  //Login Page methods\n  Login(Login: string, Password: string) {\n    const body = { Username: Login, Password: Password };\n    return this.http.post('http://localhost:53029/Account/Login/', body);\n  }\n  //Admin page methods\n  GetAllTests() {\n    return this.http.get('http://localhost:53029/Admin/GetAllTests/');\n  }\n\n  GetAnswersByQuestionGuid(questionGuid: string) {\n    const params = new HttpParams().set('questionGuid', questionGuid);\n    return this.http.get('http://localhost:53029/Apilike/GetAnswersByQuestionGuid/', { params });\n  }\n\n  CreateAnswer(_questionGuid: string, _answer: AnswerViewModel) {\n    let body = {\n      questionGuid: _questionGuid, answer: {\n        Instance: _answer.Instance,\n        IsCorrect: _answer.IsCorrect,\n        Guid: null\n      }\n    };\n    return this.http.post('http://localhost:53029/Apilike/CreateAnswer/', body);\n  }\n\n  createQuestion(_testGuid: string, _question: QuestionViewModel) {\n    let body = {\n      testGuid: _testGuid,\n      question: {\n        Instance: _question.Instance,\n        Hint: _question.Hint,\n        Answers: null,\n        IsValid: false\n      }\n    };\n    return this.http.post('http://localhost:53029/Apilike/CreateQuestion/', body);\n  }\n\n  removeQuestion(_testGuid: string, _questionGuid: string) {\n    return this.http.post('http://localhost:53029/Apilike/RemoveQuestion/', { testGuid: _testGuid, questionGuid: _questionGuid });\n  }\n\n  removeAnswer(_answerGuid: string) {\n    return this.http.post('http://localhost:53029/Apilike/RemoveAnswer', { answerGuid: _answerGuid });\n  }\n\n  updateQuestion(_question: QuestionViewModel) {\n    const body = {\n      questionGuid: _question.Guid,\n      question: {\n        Instance: _question.Instance,\n        Hint: _question.Hint,\n        IsValid: _question.IsValid,\n        Guid: _question.Guid\n      }\n    };\n    return this.http.post('http://localhost:53029/Apilike/UpdateQuestion/', body);\n  }\n\n  getTestByTestingUrlGuid(_testingUrlGuid: string) {\n    const params = new HttpParams().set('testingUrlGuid', _testingUrlGuid);\n    return this.http.get('http://localhost:53029/Apilike/GetTestByTestingUrlGuid/', { params });\n  }\n\n  createTest(_test: TestViewModel) {\n    const body = {\n      test: {\n        Name: _test.Name,\n        Description: _test.Description,\n        TestTimeLimit: _test.TestTimeLimit,\n        QuestionTimeLimit: _test.QuestionTimeLimit,\n        Questions: null,\n        Guid: null,\n        IsValid: null\n      }\n    };\n    return this.http.post('http://localhost:53029/Apilike/CreateTest/', body);\n  }\n\n  removeTest(_testGuid: string) {\n    return this.http.post('http://localhost:53029/Apilike/RemoveTest/', {\n      testGuid: _testGuid\n    });\n  }\n\n  getAllTestingUrls() {\n    return this.http.get('http://localhost:53029/Admin/GetAllTestingUrls/');\n  }\n\n  updateTest(_testGuid: string, _test: TestViewModel) {\n    const body = {\n      testGuid: _testGuid,\n      test: {\n        Name: _test.Name,\n        Description: _test.Description,\n        TestTimeLimit: _test.TestTimeLimit,\n        QuestionTimeLimit: _test.QuestionTimeLimit,\n        Questions: null,\n        Guid: null,\n        IsValid: null\n      }\n    };\n    return this.http.post('http://localhost:53029/Apilike/UpdateTest/', body);\n  }\n\n  createTestingUrl(_testingUrl: TestingUrlViewModel) {\n    const body = {\n      testingUrl: {\n        UrlInstance: _testingUrl.UrlInstance,\n        Guid: null,\n        TestGuid: _testingUrl.TestGuid,\n        TestName: _testingUrl.TestName,\n        Interviewee: null,\n        NumberOfRuns: 0,\n        AllowedStartDate: _testingUrl.AllowedStartDate,\n        AllowedEndDate: _testingUrl.AllowedEndDate\n      }\n    };\n    return this.http.post('http://localhost:53029/Apilike/CreateTestingUrl/', body);\n  }\n\n  removeTestingUrl(_testingUrlGuid: string) {\n    return this.http.post('http://localhost:53029/Apilike/RemoveTestingUrl/', { testingUrlGuid: _testingUrlGuid });\n  }\n\n  getQuestionsByTestGuid(testGuid: string) {\n    const params = new HttpParams().set('testGuid', testGuid);\n    return this.http.get('http://localhost:53029/Apilike/GetQuestionsByTestGuid/', { params });\n  }\n\n  getInfoAndStartTest(testingUrlGuid: string) {\n    const params = new HttpParams().append('testingUrlGuid', testingUrlGuid);\n    return this.http.get('http://localhost:53029/Quiz/GetInfoAndStartTest', { params });\n  }\n\n  getAllTestResults() {\n   return this.http.get(\"http://localhost:53029/Admin/GetAllTestingResults\");\n}\n\n  finishTest(result: TestPassingViewModel) {\n\n    const body = {\n      testPassing: {\n        Guid: result.Guid,\n        TestingGuid: result.TestingGuid,\n        Interviewee: result.Interviewee,\n        TestingStartDateTime: result.TestingStartDateTime,\n        TestingEndDateTime: result.TestingEndDateTime,\n        Duration: result.Duration,\n        QuestionsTried: result.QuestionTried.toString(),\n        Score: result.Score,\n        AttemptGuid: result.AttemptGuid,\n        Questions:JSON.stringify(result.Questions)\n      }\n\n    };\n  return  this.http.post('http://localhost:53029/Quiz/FinishTest', body);\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rlc3RpbmctcmVzdWx0cy90ZXN0aW5nLXJlc3VsdHMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div>\\n  <table class='table'>\\n<thead>\\n  <th>Test name</th>\\n  <th>Interviewee</th>\\n  <th>Duration</th>\\n  <th>Score</th>\\n</thead>\\n<tbody>\\n  <tr *ngFor='let result of testingResults'>\\n<td>{{result.TestName}}</td>\\n<td>{{result.Interviewee}}</td>\\n<td>{{result.Duration}}</td>\\n<td>{{result.Score}}</td>\\n  </tr>\\n</tbody>\\n  </table>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../services/http/http.service';\nimport { TestingResultViewModel } from 'src/assets/Models/Managing/TestingResultViewModel';\n\n@Component({\n  selector: 'app-testing-results',\n  templateUrl: './testing-results.component.html',\n  styleUrls: ['./testing-results.component.css']\n})\nexport class TestingResultsComponent implements OnInit {\n  testingResults: TestingResultViewModel[];\n  constructor(private http:HttpService) { }\n\n  ngOnInit() {\n    this.http.getAllTestResults().subscribe((x: TestingResultViewModel[]) => this.testingResults = x);\n    \n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VwZGF0ZS1xdWVzdGlvbi91cGRhdGUtcXVlc3Rpb24uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<form #editQuestionForm=\\\"ngForm\\\">\\n  <div>\\n    <div>\\n      <div *ngFor='let test of testsList'>\\n        <span (click)='selectTest(test)'>{{test.Name}}</span>\\n        <!-- <ul >\\n        <li (click)='selectQuestion(question)' *ngFor='let question of questionsList' *ngIf='selectedTest===test'>{{question.Instance}}</li>\\n      </ul> -->\\n        <div *ngFor='let question of questionsList'>\\n          <label (click)='selectQuestion(question)' *ngIf='selectedTest===test'>{{question.Instance}}</label>\\n        </div>\\n      </div>\\n    </div>\\n    <div *ngIf='selectedQuestion'>\\n      <div>\\n        <label>Instance: </label>\\n        <input type='text' name='instanceInput' [(ngModel)]='selectedQuestion.Instance' class='form-control' required>\\n      </div>\\n      <div>\\n        <label>Hint: </label>\\n        <input type='text' class='form-control' name='hintInput' [(ngModel)]='selectedQuestion.Hint' required>\\n      </div>\\n      <button [disabled]='!editQuestionForm.form.valid' (click)='confirmEdit()'>Confirm</button>\\n    </div>\\n  </div>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../services/http/http.service';\nimport { TestViewModel } from 'src/assets/Models/Managing/TestViewModel';\nimport { QuestionViewModel } from 'src/assets/Models/Managing/QuestionViewModel';\n\n@Component({\n  selector: 'app-update-question',\n  templateUrl: './update-question.component.html',\n  styleUrls: ['./update-question.component.css']\n})\nexport class UpdateQuestionComponent implements OnInit {\n  testsList: TestViewModel[];\n  selectedTest: TestViewModel;\n  questionsList: QuestionViewModel[];\n  selectedQuestion: QuestionViewModel;\n  constructor(private http:HttpService) { }\n\n  selectTest(_test: TestViewModel)\n {\n    this.selectedTest = _test;\n    this.questionsList = this.selectedTest.Questions;\n}\n\n  selectQuestion(_question: QuestionViewModel) {\n    this.selectedQuestion = _question;\n  }\n  \n  getAllTests() {\n    this.http.GetAllTests().subscribe((x: TestViewModel[]) => this.testsList = x);\n}\n\n  confirmEdit() {\n    this.http.updateQuestion(this.selectedQuestion).subscribe();\n    this.selectedQuestion = null;\n  }\n  \n  ngOnInit() {\n    this.getAllTests();\n  }\n\n}\n","module.exports = \"table{\\r\\n    /* table-layout: fixed;\\r\\n    width: 75%;\\r\\n    border-collapse: collapse;\\r\\n    border: 2px solid black; */\\r\\n    table-layout: fixed;\\r\\n    margin: auto;\\r\\n    padding: 10px;\\r\\n    border-collapse: collapse;\\r\\n\\r\\n    width: 75%;\\r\\n  }\\r\\n\\r\\n  table td,th{\\r\\n    border-style: solid;\\r\\n    border-width: 2px;\\r\\n    border-color: black;\\r\\n    border-collapse: collapse; \\r\\n}\\r\\n\\r\\n  input:placeholder-shown{\\r\\n  border-color: red;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXBkYXRlLXRlc3QvdXBkYXRlLXRlc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJOzs7K0JBRzJCO0lBQzNCLG9CQUFvQjtJQUNwQixhQUFhO0lBQ2IsY0FBYztJQUNkLDBCQUEwQjs7SUFFMUIsV0FBVztHQUNaOztFQUVEO0lBQ0Usb0JBQW9CO0lBQ3BCLGtCQUFrQjtJQUNsQixvQkFBb0I7SUFDcEIsMEJBQTBCO0NBQzdCOztFQUVEO0VBQ0Usa0JBQWtCO0NBQ25CIiwiZmlsZSI6InNyYy9hcHAvdXBkYXRlLXRlc3QvdXBkYXRlLXRlc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxle1xyXG4gICAgLyogdGFibGUtbGF5b3V0OiBmaXhlZDtcclxuICAgIHdpZHRoOiA3NSU7XHJcbiAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xyXG4gICAgYm9yZGVyOiAycHggc29saWQgYmxhY2s7ICovXHJcbiAgICB0YWJsZS1sYXlvdXQ6IGZpeGVkO1xyXG4gICAgbWFyZ2luOiBhdXRvO1xyXG4gICAgcGFkZGluZzogMTBweDtcclxuICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XHJcblxyXG4gICAgd2lkdGg6IDc1JTtcclxuICB9XHJcblxyXG4gIHRhYmxlIHRkLHRoe1xyXG4gICAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcclxuICAgIGJvcmRlci13aWR0aDogMnB4O1xyXG4gICAgYm9yZGVyLWNvbG9yOiBibGFjaztcclxuICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7IFxyXG59IFxyXG5cclxuaW5wdXQ6cGxhY2Vob2xkZXItc2hvd257XHJcbiAgYm9yZGVyLWNvbG9yOiByZWQ7XHJcbn0iXX0= */\"","module.exports = \"<div *ngIf='selectedTest'>\\n  <div>\\n    <form #editTestForm='ngForm'>\\n      <table class='table'>\\n        <tr>\\n          <button [ngClass]=\\\"editTestForm.form.valid ? 'btn btn-success' : 'btn btn-default'\\\" (click)='confirmUpdateTest()'\\n            [disabled]='!editTestForm.form.valid'>Save changes</button>\\n        </tr>\\n        <tr>\\n          <th>Test Name</th>\\n          <th>Description</th>\\n          <th>Test time limit</th>\\n          <th>Question time limit</th>\\n          <th>Questions</th>\\n        </tr>\\n        <tr>\\n          <td><input class='form-control' type='text' name='testName' [(ngModel)]='selectedTest.Name' placeholder=\\\"Test name\\\"\\n              required></td>\\n          <td><input class='form-control' type='text' name='testDescription' [(ngModel)]='selectedTest.Description'\\n              placeholder=\\\"Test description\\\" required></td>\\n          <td><input class='form-control' type='time' step=\\\"1\\\" name='timeforTest' [(ngModel)]='selectedTest.TestTimeLimit'\\n              required></td>\\n          <td><input class='form-control' type='time' step=\\\"1\\\" name='timePerQuestion' [(ngModel)]='selectedTest.QuestionTimeLimit'\\n              required></td>\\n          <td><button class=\\\"btn\\\" (click)='isShowTestEditDivValueChange()' style='float: right;'>Edit</button></td>\\n        </tr>\\n\\n      </table>\\n    </form>\\n  </div>\\n  <div *ngIf='isShowTestEditDiv'>\\n    <div>\\n      <app-create-question [selectedTest]='selectedTest'></app-create-question>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { TestViewModel } from 'src/assets/Models/Managing/TestViewModel';\nimport { HttpService } from '../services/http/http.service';\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\n\n@Component({\n  selector: 'app-update-test',\n  templateUrl: './update-test.component.html',\n  styleUrls: ['./update-test.component.css']\n})\nexport class UpdateTestComponent implements OnInit {\n  testsList: TestViewModel[];\n  @Input()selectedTest: TestViewModel;\n  isShowTestEditDiv: boolean;\n  testGuid: string;\n  constructor(private http: HttpService, private route: ActivatedRoute,private router:Router) {\n    this.route.params.subscribe(params => this.testGuid = params['guid']);\n  }\n\n  selectTest(_test: TestViewModel) {\n    this.selectedTest = _test;\n  }\n\n  isShowTestEditDivValueChange() {\n    this.isShowTestEditDiv = true;\n  }\n\n\n  ngOnInit() {\n    this.http.GetAllTests().subscribe((x: TestViewModel[]) => {\n    this.testsList = x;\n    for (var i = 0; i < this.testsList.length; i++) {\n      if (this.testsList[i].Guid === this.testGuid) {\n        this.selectedTest = this.testsList[i];\n      }\n    }});  \n  }\n\n  confirmUpdateTest() {\n    this.isShowTestEditDiv = false;\n    this.http.updateTest(this.testGuid, this.selectedTest).subscribe(() =>\n      this.router.navigate(['admin-panel/manage-tests'])\n    );\n    \n}\n\n}\n","module.exports = \"tr:hover{\\r\\n    background-color: blanchedalmond;\\r\\n    cursor: pointer;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlci1wYW5lbC91c2VyLXBhbmVsLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxpQ0FBaUM7SUFDakMsZ0JBQWdCO0NBQ25CIiwiZmlsZSI6InNyYy9hcHAvdXNlci1wYW5lbC91c2VyLXBhbmVsLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0cjpob3ZlcntcclxuICAgIGJhY2tncm91bmQtY29sb3I6IGJsYW5jaGVkYWxtb25kO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG59Il19 */\"","module.exports = \"<div>\\n  <div *ngIf='testsList'>\\n    <table class='table' style='margin: auto; width:80%; margin-top: 50px;'>\\n      <thead>\\n        <th>Test name</th>\\n        <th>Test description</th>\\n        <th>Time for test</th>\\n        <th>Time per question</th>\\n      </thead>\\n      <tbody *ngIf='testsList'>\\n        <tr *ngFor='let test of testsList' data-toggle=\\\"tooltip\\\"  title=\\\"Click to start test\\\" (click)='startTest(test)'>\\n          <td>{{test.Name}}</td>\\n          <td>{{test.Description}}</td>\\n          <td>{{test.TestTimeLimit}}</td>\\n          <td>{{test.QuestionTimeLimit}}</td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  <div>\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { TestViewModel } from 'src/assets/Models/Managing/TestViewModel';\nimport { HttpService } from '../services/http/http.service';\nimport { LoginViewModel } from 'src/assets/Models/LoginViewModel';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { map } from 'rxjs/operators';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-user-panel',\n  templateUrl: './user-panel.component.html',\n  styleUrls: ['./user-panel.component.css']\n})\nexport class UserPanelComponent implements OnInit {\n  testsList: TestViewModel[];\n  selectedTest: TestViewModel;\n  isTestStarted: boolean = false;\n  currentUserName: string;\n  constructor(private http: HttpService,private router:Router,private route:ActivatedRoute,private location:Location) { }\n\n  ngOnInit() {\n    this.getAllTests();\n  this.currentUserName = sessionStorage.getItem('username');\n  }\n\n  startTest(_test: TestViewModel) {\n    this.selectedTest = _test;\n    sessionStorage.setItem('testGuid', this.selectedTest.Guid);\n    sessionStorage.setItem('username', this.currentUserName);\n    this.router.navigate(['test-passing']);\n\n  //  console.log(this.router.events);\n\n\n   // this.location.replaceState('UserPanel/TestPassing');\n  }\n\n  // selectTest(_test: TestViewModel) {\n  //   this.selectedTest = _test;\n \n  // }\n\n  getAllTests() {\n    this.http.GetAllTests().subscribe((x: TestViewModel[]) => this.testsList = x);\n  }\n\n}\n","export class AnswerViewModel\r\n{\r\n  Instance: string;\r\n  IsCorrect: boolean;\r\n  Guid: string;\r\n}","import { AnswerViewModel } from \"./AnswerViewModel\";\r\n\r\nexport class QuestionViewModel{\r\n  Instance: string;\r\n  Hint: string;\r\n  Answers: AnswerViewModel[];\r\n  IsValid: boolean;\r\n  Guid: string;\r\n}","import { QuestionViewModel } from \"./QuestionViewModel\";\r\n\r\nexport class TestViewModel{\r\n  Name: string;\r\n  Description: string;\r\n  TestTimeLimit: string;\r\n  QuestionTimeLimit: string;\r\n  Questions: QuestionViewModel[];\r\n  Guid: string;\r\n  IsValid: boolean;\r\n}","export class TestingUrlViewModel{\r\n  UrlInstance: string;\r\n  Guid: string;\r\n  TestGuid: string;\r\n  TestName: string;\r\n  Interviewee: string;\r\n  NumberOfRuns: number;\r\n  AllowedStartDate: string;\r\n  AllowedEndDate: string;\r\n  IsValid: boolean;\r\n}","import { Observable } from \"rxjs\";\r\n\r\nexport class ChoicePassingViewModel{\r\n  QuestionGuid: string;\r\n  AnswersSelected: string[];\r\n}","import { Observable } from \"rxjs\";\r\nimport { ChoicePassingViewModel } from \"./ChoicePassingViewModel\";\r\n\r\nexport class TestPassingViewModel{\r\n  Guid:string;\r\n  TestingGuid:string;\r\n  Interviewee: string;\r\n  TestingStartDateTime: string;\r\n  TestingEndDateTime: string;\r\n  Duration: string;\r\n  QuestionTried: number;\r\n  Score: number;\r\n  AttemptGuid: string;\r\n  Questions: ChoicePassingViewModel[];\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}